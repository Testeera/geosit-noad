name: Build geosite
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GEOX }}
          delete_release: true
          repo: Testeera/geosit-noad

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Generate geosite.dat
        env:
          SED1: grep -v "#" | grep -v "payload:" | sed '/^\s*$/d' | sed "s/  - '+.//g" | sed "s/- '+.//g" | sed "s/  - '/full:/g" | sed "s/- '/full:/g" | sed "s/'$//" | sed 's/  - "+.//g' | sed 's/- "+.//g' | sed 's/  - "/full:/g' | sed 's/- "/full:/g' | sed 's/"$//'
          SED2: grep "DOMAIN" | grep -v "#" | sed '/^\s*$/d' | sed 's/  - DOMAIN,/full:/g' | sed 's/  - DOMAIN-SUFFIX,//g' | sed 's/  - DOMAIN-KEYWORD,/keyword:/g'
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          mkdir -p ./community/mydata
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml | ${{ env.SED2 }} > ./community/mydata/lan
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.yaml | ${{ env.SED2 }} > ./community/mydata/networktest1
          cat <<EOF >> ./community/mydata/networktest1
          keyword:test-ipv6
          keyword:testipv6
          keyword:ipv6-test
          keyword:ipv6test
          EOF
          sort ./community/mydata/networktest1 | uniq -i > ./community/mydata/networktest
          rm -f ./community/mydata/networktest1
          curl -sSL https://rules.kr328.app/microsoft@cn.yaml | ${{ env.SED1 }} > ./community/mydata/microsoft-cn
          curl -sSL https://rules.kr328.app/apple@cn.yaml | ${{ env.SED1 }} > ./community/mydata/apple-cn
          curl -sSL https://rules.kr328.app/google@cn.yaml | grep -v 'googleapis\.cn' | ${{ env.SED1 }} > ./community/mydata/google-cn
          curl -sSL https://rules.kr328.app/category-games@cn.yaml | ${{ env.SED1 }} > ./community/mydata/games-cn
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy_Classical.yaml | ${{ env.SED2 }} > ./community/mydata/proxy
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Classical.yaml | ${{ env.SED2 }} > ./community/mydata/cn
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml | ${{ env.SED2 }} > ./community/mydata/openai
          curl -sSL https://raw.githubusercontent.com/Testeera/biiba/main/bilidomain.txt > ./community/mydata/bilidomain
          curl -sSL https://raw.githubusercontent.com/Testeera/biiba/main/test-ipv6.txt > ./community/mydata/testipv6
          curl -sSL https://raw.githubusercontent.com/Testeera/biiba/main/adblock.txt > ./community/mydata/adblock
          cd ./community
          go run ./ --datapath=./mydata --outputname geosite.dat

      - name: Generate geosite-lite.dat
        env:
          SED1: grep -v "#" | grep -v "payload:" | sed '/^\s*$/d' | sed "s/  - '+.//g" | sed "s/- '+.//g" | sed "s/  - '/full:/g" | sed "s/- '/full:/g" | sed "s/'$//" | sed 's/  - "+.//g' | sed 's/- "+.//g' | sed 's/  - "/full:/g' | sed 's/- "/full:/g' | sed 's/"$//'
          SED2: grep "DOMAIN" | grep -v "#" | sed '/^\s*$/d' | sed 's/  - DOMAIN,/full:/g' | sed 's/  - DOMAIN-SUFFIX,//g' | sed 's/  - DOMAIN-KEYWORD,/keyword:/g'
        run: |
          mkdir -p ./community/mydata-lite
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml | ${{ env.SED2 }} > ./community/mydata-lite/lan
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.yaml | ${{ env.SED2 }} > ./community/mydata-lite/networktest1
          cat <<EOF >> ./community/mydata-lite/networktest1
          keyword:test-ipv6
          keyword:testipv6
          keyword:ipv6-test
          keyword:ipv6test
          EOF
          sort ./community/mydata-lite/networktest1 | uniq -i > ./community/mydata-lite/networktest
          rm -f ./community/mydata-lite/networktest1
          curl -sSL https://rules.kr328.app/microsoft@cn.yaml | ${{ env.SED1 }} > ./community/mydata-lite/microsoft-cn
          curl -sSL https://rules.kr328.app/apple@cn.yaml | ${{ env.SED1 }} > ./community/mydata-lite/apple-cn
          curl -sSL https://rules.kr328.app/google@cn.yaml | grep -v 'googleapis\.cn' | ${{ env.SED1 }} > ./community/mydata-lite/google-cn
          curl -sSL https://rules.kr328.app/category-games@cn.yaml | ${{ env.SED1 }} > ./community/mydata-lite/games-cn
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy_Classical.yaml | ${{ env.SED2 }} > ./community/mydata-lite/proxy
          curl -sSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Classical.yaml | ${{ env.SED2 }} > ./community/mydata-lite/cn
          cd ./community
          go run ./ --datapath=./mydata-lite --outputname geosite-lite.dat

      - name: Move files
        run: |
          mkdir -p ./publish
          install -Dp ./community/geosite.dat ./publish/
          install -Dp ./community/geosite-lite.dat ./publish/
          cd ./publish || exit 1

      - name: Release and upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GEOX }}
          release_name: latest
          tag: latest
          file_glob: true
          file: ./publish/*

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GEOX }}@github.com/${{ github.repository }}"
          git push -f -u origin release
